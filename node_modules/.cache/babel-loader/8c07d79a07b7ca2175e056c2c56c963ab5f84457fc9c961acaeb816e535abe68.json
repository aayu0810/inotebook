{"ast":null,"code":"var _jsxFileName = \"/Users/sukhdeepsharma/inotebook/src/context/Notes/NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // GET All Notes\n  const getNotes = async () => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRkMzIxNjBmOGNmNDBjZTVhMGRhZGFlIn0sImlhdCI6MTY5MTU1OTM1Nn0.cxVUSsgJoaKqQSfMJ3wCP2K7-Ad4DVbUJW0xrcRqc0M\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  //Add a Note\n  const addNote = async (title, description, tag) => {\n    //TODO API CALL\n    // API Call\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRkMzIxNjBmOGNmNDBjZTVhMGRhZGFlIn0sImlhdCI6MTY5MTU1OTM1Nn0.cxVUSsgJoaKqQSfMJ3wCP2K7-Ad4DVbUJW0xrcRqc0M\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    console.log(\"Adding a new note\");\n    const note = {\n      \"_id\": \"64d435e56a0bffdbb4584f26\",\n      \"user\": \"64d32160f8cf40ce5a0dadae\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2023-08-10T00:57:09.401Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  };\n  // Delete a note\n  const deleteNote = async id => {\n    //TODO API CALL\n\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRkMzIxNjBmOGNmNDBjZTVhMGRhZGFlIn0sImlhdCI6MTY5MTU1OTM1Nn0.cxVUSsgJoaKqQSfMJ3wCP2K7-Ad4DVbUJW0xrcRqc0M\"\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    console.log(\"Deleting the note with id \" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  //Edit a note\n  const editNote = async (id, title, description, tag) => {\n    // API Call\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRkMzIxNjBmOGNmNDBjZTVhMGRhZGFlIn0sImlhdCI6MTY5MTU1OTM1Nn0.cxVUSsgJoaKqQSfMJ3wCP2K7-Ad4DVbUJW0xrcRqc0M\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n\n    // Logic to edit in client\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id == id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"VXWhibZa1EGinsvwp6wlB+LoDRI=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sukhdeepsharma/inotebook/src/context/Notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\nconst NoteState = (props) => {\nconst host =\"http://localhost:5000\"\n    const notesInitial =[]\n    const [notes,setNotes]= useState(notesInitial)\n\n    // GET All Notes\n    const getNotes = async ()=>{\n      //API Call\n      const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          'auth-token':\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRkMzIxNjBmOGNmNDBjZTVhMGRhZGFlIn0sImlhdCI6MTY5MTU1OTM1Nn0.cxVUSsgJoaKqQSfMJ3wCP2K7-Ad4DVbUJW0xrcRqc0M\"\n          \n        }\n    \n    });\n    const json = await response.json()\n    console.log(json)\n    setNotes(json)\n  }\n\n      //Add a Note\n      const addNote = async(title,description,tag) =>\n    { //TODO API CALL\n      // API Call\n      const response = await fetch(`${host}/api/notes/addnote`, {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json',\n          'auth-token':\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRkMzIxNjBmOGNmNDBjZTVhMGRhZGFlIn0sImlhdCI6MTY5MTU1OTM1Nn0.cxVUSsgJoaKqQSfMJ3wCP2K7-Ad4DVbUJW0xrcRqc0M\"\n          \n        },\n         body: JSON.stringify({title,description,tag})\n      });\n        \n    \n\n      console.log (\"Adding a new note\")\n      const note=\n      {\n        \"_id\": \"64d435e56a0bffdbb4584f26\",\n        \"user\": \"64d32160f8cf40ce5a0dadae\",\n        \"title\": title,\n        \"description\": description,\n        \"tag\": tag,\n        \"date\": \"2023-08-10T00:57:09.401Z\",\n        \"__v\": 0\n      };\n      setNotes (notes.concat(note))\n      \n    }\n      // Delete a note\n      const deleteNote = async(id) =>\n    { //TODO API CALL\n\n      const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-type': 'application/json',\n          'auth-token':\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRkMzIxNjBmOGNmNDBjZTVhMGRhZGFlIn0sImlhdCI6MTY5MTU1OTM1Nn0.cxVUSsgJoaKqQSfMJ3wCP2K7-Ad4DVbUJW0xrcRqc0M\"\n          \n        }\n      });\n        const json = response.json();\n        console.log(json)\n\n\n      console.log(\"Deleting the note with id \" + id);\n     const newNotes = notes.filter((note)=> {return note._id!==id})\n      setNotes(newNotes)\n\n    }\n\n\n      //Edit a note\n      const editNote = async (id, title, description , tag) =>{\n    // API Call\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json',\n        'auth-token':\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRkMzIxNjBmOGNmNDBjZTVhMGRhZGFlIn0sImlhdCI6MTY5MTU1OTM1Nn0.cxVUSsgJoaKqQSfMJ3wCP2K7-Ad4DVbUJW0xrcRqc0M\"\n        \n      },\n       body: JSON.stringify({title,description,tag})\n    });\n      const json = response.json();\n\n      // Logic to edit in client\n    \n        for (let index =0; index<notes.length; index++){\n\n          const element = notes[index];\n          if(element._id ==id)\n            { \n              element.title= title;\n              element.description= description;\n              element.tag= tag;\n\n            }\n\n        }\n  \n        \n      }\n\n\n\n\n    return (\n        <NoteContext.Provider value = {{ notes, addNote,deleteNote, editNote, getNotes }}>\n            {props.children}\n        </NoteContext.Provider>\n    )\n\n\n\n    }\n\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}